name: Terraform Validation

permissions:
  id-token: write
  contents: read
  pull-requests: write

on:
  pull_request:
  push:

jobs:
  terraform:
    name: Terraform Validation
    runs-on: ubuntu-latest

    defaults:
      run:
        shell: bash

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ap-northeast-1
          role-to-assume: ${{ secrets.GITHUBACTIONS_OIDC_ARN }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.9.8

      - name: Check Terraform Format
        run: terraform fmt -recursive -check

      - name: Initialize Terraform (Dev)
        working-directory: ./env/dev
        run: terraform init

      - name: Validate Terraform (Dev)
        working-directory: ./env/dev
        run: terraform validate

      - name: Run TFLint
        uses: reviewdog/action-tflint@v1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          reporter: github-pr-review
          tflint_init: "true"
          tflint_config: "${{ github.workspace }}/.tflint.hcl"
          level: "error"
          fail_on_error: "true"
          filter_mode: "added"
          flags: "--recursive"
        
      - name: Create Terraform Plan (Dev)
        working-directory: ./env/dev
        id: dev_plan
        run: terraform plan -no-color

      - name: Update Pull Request with Terraform Plan
        uses: actions/github-script@v7
        if: github.event_name == 'pull_request'
        env:
          Dev_PLAN: "terraform\n${{ steps.dev_plan.outputs.stdout }}"
        with:
          result-encoding: string
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const output = `#### Check! Terraform Show Plans ðŸ–Œ\`
            <details><summary>Dev Show Plan</summary>

            \`\`\`\n
            ${process.env.Dev_PLAN}
            \`\`\`

            </details>

            *Pusher: @${{ github.actor }}, Action: \`${{ github.event_name }}\`*`;

            github.rest.issues.createComment({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: output
            });

